public List<Wall> creatWalls() {
        List<Wall> walls = new ArrayList<>();
        List<Wall> doors = new ArrayList<>();
        Random random = new Random();

        // Adiciona obst치culos horizontais com portas
        for (int y = 1; y <= height; y += height / 5) {
            int doorPosition = random.nextInt(width) + 1;
            for (int x = 1; x <= width; x++) {
                if (x == doorPosition) {
                    doors.add(new Wall(x, y));
                } else {
                    walls.add(new Wall(x, y));
                }
            }
        }

        // Adiciona obst치culos verticais com portas
        for (int x = 1; x <= width; x += width / 5) {
            int doorPosition = random.nextInt(height) + 1;
            for (int y = 1; y <= height; y++) {
                if (y == doorPosition) {
                    doors.add(new Wall(x, y));
                } else {
                    walls.add(new Wall(x, y));
                }
            }
        }

        // Adiciona obst치culos aleat칩rios
        for (int i = 0; i < 50; i++) {
            int x = random.nextInt(width) + 1;
            int y = random.nextInt(height) + 1;
            if (!walls.contains(new Wall(x, y)) && !doors.contains(new Wall(x, y))) {
                walls.add(new Wall(x, y));
            }
        }

        // Combina paredes e portas
        walls.addAll(doors);
        return walls;
    }